@model RusticsInventoryMVC.Models.Product

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProductName)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.HowTo)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.HowTo)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.Weight)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.Weight)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.Size)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.Size)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.AmountOnHand)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.AmountOnHand)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.ProductCategory.Category)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.ProductCategory.Category)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.ProductMaterials)
        </dt>

        <dd>
            <br />
            @*@{ 
                foreach (var item in Model.ProductMaterials)
                {
                    <p>
                        @Html.DisplayFor(model => item.Material.MaterialName)
                    </p>
                }
            }*@
            <table>
                @{
                    var materialsList = Model.ProductMaterials.ToList();

                    for (int i = 0; i <= Model.ProductMaterials.Count; i += 2)
                    {
                        if ((i) < materialsList.Count())
                        {
                            <tr>@Html.DisplayFor(model => materialsList[i].Material.MaterialName), </tr>
                        }
                        if ((i + 1) < materialsList.Count())
                        {
                            if ((i + 2) == materialsList.Count())
                            {
                                <tr>@Html.DisplayFor(model => materialsList[i + 1].Material.MaterialName)</tr>
                            }
                            else
                            {
                                <tr>@Html.DisplayFor(model => materialsList[i + 1].Material.MaterialName), </tr>
                            }

                        }
                    }
                }
            </table>
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.CreateDate)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.CreateDate)
        </dd>

        <dt>
            <br />
            @Html.DisplayNameFor(model => model.ModifyDate)
        </dt>

        <dd>
            <br />
            @Html.DisplayFor(model => model.ModifyDate)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ProductID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
